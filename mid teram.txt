
Q1:
1. Download the website from following url in a directory.
	https://www.free-css.com/assets/files/free-css-templates/download/page284/built-better.zip
2. Initiate the directory with git.
3. Create a rule to ignore the commit of file name README.txt (You have to write the commit details you will make for any updates in this project)
4. Make commit of whole data with name "initial commit"
5. Make remote access of github repository using ssh access. Do not use https for remote access. 
6. Now commit this code to github in a private reposity name "webMidterm" in main branch.
7. Run a linux server with git and docker installed for Dev and Prod environments.
8. Pull the uploaded code from github repo in Linux server using git (remote as ssh) from main branch for Prod environment.
9. Now run two docker containers named as "myapp-prod" using docker compose. Use nginx image and github main branch web content in "myapp-prod" container by using volume. Make sure you should be able to access the web page from external network.
10. Access the web page and check everthing is working fine.
11. Now create a new branch named "update-{name}-1" from main branch and make following modifications in web application.
   a. Change "OUR SERVICES" to "What We Provide"
   b. Change the "Call Us : +01 1234567890" to "Contact Number : +923045576706"
12. Commit the changes. 
13. Update the github repository with new branch along with all data.
14. Now pull branch "update-Mid term-1" from github (remote as ssh) on Docker server and make the pulled web content avaliable in the webroot of "myapp-dev" container and verify new changes have been reflected on web page. 
15. If the changes are not sucessfull, you may need to make more modification in the code and keep testing by using the point number 13, untill the desire results are achived.
16. When the desired changes are sucessfull, commit the code with message "updated verion of application final version" and make sure the same verion of application is available on web server you ran.
17. Now you have to merge the branch "update-webcode-1" in "main" branch and push the code to github main branch.
18. Pull the code from "main" branch and make sure the latest code is available in the webroot of "myapp-prod" container and verify the prod url is showing you the updated verion of application.
19. Delete the branch "update-webcode-1" from local git and github.  

Q2:
Create a directory named as "project1". Place two dockerfiles named respectively "dockerfile_midterm" and "dokcerfileweb2" inside of "project1" directory. (Note these dockerfiles must be from lab1 and lab2 that we did yesterday).
You have to make two containers using docker-compose.yaml file with following properties:
  1. Crete two containers by using dockerfiles.
  2. Expose the port 8000 for 1st container and name it as webMid-1 
  3. Expose the port 9000 for 2nd container and name it as webMid-2
  4. Each container should not be able to use more then 100MB RAM and 2 core of CPU.
  5.Each container should be able to use more then 10MB RAM and 1 core of CPU.
  6. Time of both containers must be synced with the host time. 
  7. Container restart policy should be able to start the containers automatically on host reboot.  




